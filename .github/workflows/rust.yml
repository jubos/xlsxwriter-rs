name: Rust

on:
  push:
    branches: [ master, test-actions ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  win-mac-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: msys2/setup-msys2@v2
      if: ${{ matrix.os == 'windows-latest' }}
    - name: Install LLVM
      if: ${{ matrix.os == 'windows-latest' }}
      shell: msys2 {0}
      run: |
        pacman -Syu
        pacman --noconfirm -S mingw-w64-x86_64-clang
        s /mingw64/bin
    # - name: Install LLVM
    #   if: ${{ matrix.os == 'windows-latest' }}
    #   run: |
    #         curl -OL "https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/LLVM-10.0.0-win64.exe"
    #         .\LLVM-10.0.0-win64.exe -S
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    - name: Cache dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-cargo
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.crate') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Cache target
      uses: actions/cache@v2
      env:
        cache-name: cache-target
      with:
        path: target
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.crate') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
