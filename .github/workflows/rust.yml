name: Rust

on:
  push:
    branches: [ master, test-actions ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        #os: [windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install LLVM
      if: ${{ matrix.os == 'windows-latest' }}
      run: choco install llvm
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    - name: Cache dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-cargo
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.crate') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Cache target
      uses: actions/cache@v2
      env:
        cache-name: cache-target
      with:
        path: target
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.crate') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
